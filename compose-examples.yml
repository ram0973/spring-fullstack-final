---
# This docker-compose file is ignoring in production, but been using
# in development with: $ docker compose up

services:

  redis:
    container_name: redis-web
    image: redis:7.2.5
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=password
      - REDIS_PORT=6379

  postgres:
    container_name: postgres-web
    image: postgres:16.3
    restart: on-failure
    ports:
      - "5432:5432"
    build:
      context: .
      dockerfile: ./docker/postgresql/Dockerfile
    environment:
      - POSTGRES_DB=web
      - POSTGRES_USER=web
      - POSTGRES_PASSWORD=web

  maildev:
    container_name: maildev-web
    image: maildev/maildev
    restart: on-failure
    ports:
      - 8020:1080
      - 1025:1025


  # Мощный, но громоздкий интерфейс
  pgadmin:
    image: dpage/pgadmin4:8.10
    restart: on-failure
    ports:
      - 8030:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit -1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    depends_on:
      - postgres
    #entrypoint: /bin/sh -c "/entrypoint.sh;"

  adminer:
    container_name: adminer-web
    image: adminer
    restart: on-failure
    depends_on:
      - postgres
    ports:
      - 8040:8080

## Неудобный, как по мне
#  beaver:
#    image: dbeaver/cloudbeaver:latest
#    container_name: cloudbeaver-web
#    restart: on-failure
#    depends_on:
#      - postgres
#    ports:
#      - 8040:8978
#    volumes:
#      - beaver:/opt/cloudbeaver/workspace

volumes:
  pgadmin_data:
  beaver:
